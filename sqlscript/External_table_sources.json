{
	"name": "External_table_sources",
	"properties": {
		"folder": {
			"name": "logic_data_warehouse"
		},
		"content": {
			"query": "use master \ngo \n\ncreate database tushar_db\ngo \n\nalter database tushar_db collate Latin1_General_100_BIN2_UTF8\nGo\n\nuse tushar_db\nGO\n\n\n-- creating schema for external tables\nCreate schema bronze\nGO\n\ncreate schema silver\ngo \n\ncreate schema gold\ngo \n\n\n--note - to create external data source you are using https url but you can also use abfss here also \nCREATE EXTERNAL DATA SOURCE nyc_taxi_src\nWITH ( LOCATION = 'https://storagesynapset.dfs.core.windows.net/containersynapset');\n\n\nuse tushar_db\n\n\n--To check if the file format is created in the system or not.\nif not exist (select * from sys.external_file_formats where name = 'csv_file_format')\n    -- Create an external file format for DELIMITED (CSV/TSV) files.\n    --Note the below file format will only create if the csv format in csv_file_format is exist or not \n    CREATE EXTERNAL FILE FORMAT csv_file_format\n    WITH (\n            FORMAT_TYPE = DELIMITEDTEXT,\n            FORMAT_OPTIONS (\n                FIELD_TERMINATOR = ',',\n                STRING_DELIMITER = '\"',\n                FIRST_ROW = 2 ,\n                USE_TYPE_DEFAULT = FALSE,\n                ENCODING = 'UTF8',\n                PARSER_VERSION = '2.0')\n                );\n\n\n--Creating external table in synapse \n\nCREATE EXTERNAL TABLE tushar_db.bronze.taxi_zone\n(\n    location_id smallint , \n    borough varchar(50) ,\n    zone varchar(50) ,\n    service_zone varchar(15) \n)  \nWITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format\n);\nGO\n\n\nselect * from tushar_db.bronze.taxi_zone\n\n\n-- Create an external file format for DELIMITED (CSV/TSV) files.\nCREATE EXTERNAL FILE FORMAT csv_file_format_pv_1\nWITH (\n        FORMAT_TYPE = DELIMITEDTEXT,\n        FORMAT_OPTIONS (\n            FIELD_TERMINATOR = ',',\n            STRING_DELIMITER = '\"',\n            FIRST_ROW = 2 ,\n            USE_TYPE_DEFAULT = FALSE,\n            ENCODING = 'UTF8',\n            PARSER_VERSION = '1.0')\n            );\n\n-- handling error in azure synapse or handling rejaction.\nselect * from sys.external_tables \nselect * from sys.external_data_sources\nselect * from sys.external_file_formats\n\n\n\n-- Note when you drop a table the internal file data will not be removed\n\nif object_id('tushar_db.bronze.taxi_zone') is not NULL\n    drop EXTERNAL TABLE tushar_db.bronze.taxi_zone_with_rejections_done\n \n\n\nCREATE EXTERNAL TABLE tushar_db.bronze.taxi_zone_with_rejections_done\n(\n    location_id smallint , \n    borough varchar(1) ,\n    zone varchar(1) ,\n    service_zone varchar(1) \n)  \nWITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format_pv_1,\n    reject_value = 10,\n    rejected_row_location = 'Rejected/taxi_zone_rejected'\n);\nGO\n\n-- The rejected location is created by within the folders but the row which will kept will only 10\n\nSelect count(*) from tushar_db.bronze.taxi_zone_with_rejection\n\nSelect count(*) from tushar_db.bronze.taxi_zone\n\nSelect count(*) from tushar_db.bronze.taxi_zone_with_rejections_done\n\nSelect * from tushar_db.bronze.taxi_zone_with_rejections_done\n\n\n--creating external file_format - parquet format\n\nCREATE EXTERNAL FILE FORMAT parquet_file_format\nWITH\n(  \n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\n\n\n\n\n--Create an external file format for PARQUET files.\nCREATE EXTERNAL FILE FORMAT file_format_name\nWITH (\n         FORMAT_TYPE = PARQUET\n    , DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec' \n    );\n\n\n-- creating external table from parquet format \n\nCREATE EXTERNAL TABLE tushar_db.bronze.parquet_file  \n(\n    location_id smallint , \n    borough varchar(1) ,\n    zone varchar(1) ,\n    service_zone varchar(1) \n)  \nWITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_taxi_src,  \n    FILE_FORMAT = csv_file_format_pv_1,\n    reject_value = 10,\n    rejected_row_location = 'Rejected/taxi_zone_rejected'\n);\nGO\n\n\n-- Crateing external table on parquet file \n\n\nCREATE EXTERNAL TABLE bronze.parcquet_file_check_1\n    (\n\nVendorID int,\nlpep_pickup_datetime datetime2(7),\nlpep_dropoff_datetime datetime2(7),\nstore_and_fwd_flag varchar(8000),\nRatecodeID int,\nPULocationID int,\nDOLocationID int,\npassenger_count int,\ntrip_distance float,\nfare_amount float,\nextra float,\nmta_tax float,\ntip_amount float,\ntolls_amount float,\nehail_fee int,\nimprovement_surcharge float,\ntotal_amount float,\npayment_type int,\ntrip_type int,\ncongestion_surcharge float)  \nWITH (\n    LOCATION = 'raw/trip_data_green_parquet',\n    DATA_SOURCE = nyc_taxi_src,\n    FILE_FORMAT = file_format_name\n\n);\nGO\nselect * from tushar_db.bronze.parcquet_file_check\ndrop EXTERNAL TABLE tushar_db.bronze.parcquet_file_check\n\n\n\n\n--creating external file_format - parquet format\n\nCREATE EXTERNAL FILE FORMAT delta_file_format\nWITH\n(  \n    FORMAT_TYPE = delta,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\n\n\n\n\ndrop external table bronze.delta_file_check\n\nCREATE EXTERNAL TABLE bronze.delta_file_check\n    (\n\nVendorID int,\nlpep_pickup_datetime datetime2(7),\nlpep_dropoff_datetime datetime2(7),\nstore_and_fwd_flag varchar(8000),\nRatecodeID int,\nPULocationID int,\nDOLocationID int,\npassenger_count int,\ntrip_distance float,\nfare_amount float,\nextra float,\nmta_tax float,\ntip_amount float,\ntolls_amount float,\nehail_fee int,\nimprovement_surcharge float,\ntotal_amount float,\npayment_type int,\ntrip_type int,\ncongestion_surcharge float)  \nWITH (\n    LOCATION = 'raw/trip_data_green_delta',\n    DATA_SOURCE = nyc_taxi_src,\n    FILE_FORMAT = delta_file_format\n);\n\nselect * from  tushar_db.bronze.delta_file_check\n\n-- Creating view on csv file\ndrop view if exists bronze.view_calender_csv \n\ncreate view  bronze.view_calender_csv\nAS\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://storagesynapset.dfs.core.windows.net/containersynapset/raw/calendar.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n\nselect * from bronze.view_calender_csv\n\n\n-- Creating view from json file \n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "tushar_db",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}